---
- name: Install Java
  apt:
    name: openjdk-17-jdk
    state: present

- name: Create SonarQube user
  user:
    name: sonarqube
    shell: /bin/bash
    home: /opt/sonarqube
    system: yes

- name: Download SonarQube
  get_url:
    url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip"
    dest: /tmp/sonarqube-{{ sonarqube_version }}.zip
    mode: '0644'

- name: Install unzip
  apt:
    name: unzip
    state: present

- name: Extract SonarQube
  unarchive:
    src: /tmp/sonarqube-{{ sonarqube_version }}.zip
    dest: /opt
    remote_src: yes
    creates: /opt/sonarqube-{{ sonarqube_version }}

- name: Create SonarQube symlink
  file:
    src: /opt/sonarqube-{{ sonarqube_version }}
    dest: /opt/sonarqube
    state: link

- name: Set SonarQube ownership
  file:
    path: /opt/sonarqube
    owner: sonarqube
    group: sonarqube
    recurse: yes

- name: Create SonarQube directories
  file:
    path: "{{ item }}"
    state: directory
    owner: sonarqube
    group: sonarqube
    mode: '0755'
  loop:
    - /opt/sonarqube/data
    - /opt/sonarqube/logs
    - /opt/sonarqube/extensions
    - /opt/sonarqube/temp

- name: Configure SonarQube
  template:
    src: sonar.properties.j2
    dest: /opt/sonarqube/conf/sonar.properties
    owner: sonarqube
    group: sonarqube
    mode: '0644'

- name: Create SonarQube systemd service
  template:
    src: sonarqube.service.j2
    dest: /etc/systemd/system/sonarqube.service
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Start and enable SonarQube service
  systemd:
    name: sonarqube
    state: started
    enabled: yes

- name: Wait for SonarQube to start
  uri:
    url: http://localhost:9000
    status_code: 200
  register: result
  until: result.status == 200
  retries: 30
  delay: 10

- name: Install SonarQube plugins
  uri:
    url: "http://localhost:9000/api/plugins/install"
    method: POST
    body_format: form-urlencoded
    body:
      key: "{{ item }}"
    user: admin
    password: admin
    force_basic_auth: yes
    status_code: [200, 400, 409]
  loop:
    - sonar-java-plugin
    - sonar-python-plugin
    - sonar-javascript-plugin
    - sonar-go-plugin
    - sonar-csharp-plugin
    - sonar-php-plugin
    - sonar-kotlin-plugin
    - sonar-scala-plugin
    - sonar-xml-plugin
    - sonar-yaml-plugin
    - sonar-json-plugin
    - sonar-css-plugin
    - sonar-html-plugin
    - sonar-groovy-plugin
    - sonar-ruby-plugin
    - sonar-swift-plugin
    - sonar-objective-c-plugin
    - sonar-typescript-plugin
    - sonar-cobertura-plugin
    - sonar-jacoco-plugin
  ignore_errors: yes

- name: Configure SonarQube quality profiles
  template:
    src: quality-profiles.xml.j2
    dest: /tmp/quality-profiles.xml
    owner: sonarqube
    group: sonarqube
    mode: '0644'

- name: Import quality profiles
  uri:
    url: "http://localhost:9000/api/qualityprofiles/restore"
    method: POST
    body_format: form-urlencoded
    body:
      backup: "{{ lookup('file', '/tmp/quality-profiles.xml') }}"
    user: admin
    password: admin
    force_basic_auth: yes
    status_code: [200, 400]
  ignore_errors: yes

